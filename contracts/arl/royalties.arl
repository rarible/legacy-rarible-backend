archetype royalties(owner : address)

variable owner_candidate : option<address> = none

asset whitelist {
  a : address
}

entry transferOwnership(candidate : address) {
  called by owner
  effect {
    owner_candidate := some(candidate);
  }
}

entry claimOwnership() {
  called by opt_get(owner_candidate)
  effect {
    owner := opt_get(owner_candidate);
    owner_candidate := none
  }
}

record part {
  partAccount : address;
  partValue   : nat;
}

asset royalties identified by rtoken rtokenId to big_map {
  rtoken : address;
  rtokenId : option<nat>;
  rvalue : list<part>;
}

entry setRoyalties(token : address, tokenId : option<nat>, value : list<part>) {
  //called by owner
  effect {
    royalties.addupdate((token, tokenId), {rvalue = value})
  }
}

view getRoyalties(token : address, tokenId : nat) : list<part> {
  var empty_part : list<part> = [];
  return (match callview<list<part>>(token, "%getRoyalties", tokenId) with
    | some(roy) -> roy
    | none ->
      if royalties.contains((token, some(tokenId)))
      then royalties[(token, some(tokenId))].rvalue
      else if royalties.contains((token, none))
      then royalties[(token, none)].rvalue
      else empty_part
    end
  )
}
