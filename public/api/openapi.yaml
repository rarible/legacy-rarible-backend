openapi: 3.0.3
info:
  title: Tezos Rarible API
  version: "0.1"
paths:
  /v0.1/nft/activities/search:
    description: Search activities with some filter
    post:
      tags:
      - nft-activity-controller
      description: Search activities with some filter
      operationId: getNftActivities
      parameters:
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NftActivityFilter'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftActivities'
      security: []
  /v0.1/ownerships/{ownershipId}:
    description: Get NFT ownerships by id
    get:
      tags:
      - nft-ownership-controller
      description: Get NFT ownerships by id
      operationId: getNftOwnershipById
      parameters:
      - name: ownershipId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnership'
      security: []
  /v0.1/ownerships/byItem:
    description: Get NFT ownerships by item
    get:
      tags:
      - nft-ownership-controller
      description: Get NFT ownerships by item
      operationId: getNftOwnershipByItem
      parameters:
      - name: contract
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: tokenId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BigInteger'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnerships'
      security: []
  /v0.1/ownerships/all:
    description: Get NFT all ownerships
    get:
      tags:
      - nft-ownership-controller
      description: Get NFT all ownerships
      operationId: getNftAllOwnerships
      parameters:
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftOwnerships'
      security: []
  /v0.1/items/{itemId}/meta:
    description: Get NFT item by meta id
    get:
      tags:
      - nft-item-controller
      description: Get NFT item by meta id
      operationId: getNftItemMetaById
      parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItemMeta'
      security: []
  /v0.1/items/{itemId}:
    description: Get NFT item by id
    get:
      tags:
      - nft-item-controller
      description: Get NFT item by id
      operationId: getNftItemById
      parameters:
      - name: includeMeta
        in: query
        required: false
        schema:
          type: boolean
      - name: itemId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItem'
      security: []
  /v0.1/items/byOwner:
    description: Get NFT items by owner
    get:
      tags:
      - nft-item-controller
      description: Get NFT items by owner
      operationId: getNftItemsByOwner
      parameters:
      - name: owner
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: includeMeta
        in: query
        required: false
        schema:
          type: boolean
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: []
  /v0.1/items/byCreator:
    description: Get NFT items by creator
    get:
      tags:
      - nft-item-controller
      description: Get NFT items by creator
      operationId: getNftItemsByCreator
      parameters:
      - name: creator
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: includeMeta
        in: query
        required: false
        schema:
          type: boolean
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: []
  /v0.1/items/byCollection:
    description: items_by_collection
    get:
      tags:
      - nft-item-controller
      description: items_by_collection
      operationId: getNftItemsByCollection
      parameters:
      - name: collection
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: includeMeta
        in: query
        required: false
        schema:
          type: boolean
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftItems'
      security: []
  /v0.1/collections/{collection}/generate_token_id:
    description: collections_generate_id
    get:
      tags:
      - nft-collection-controller
      description: collections_generate_id
      operationId: generateNftTokenId
      parameters:
      - name: collection
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftTokenId'
      security: []
  /v0.1/collections/{collection}:
    description: collections_by_id
    get:
      tags:
      - nft-collection-controller
      description: collections_by_id
      operationId: getNftCollectionById
      parameters:
      - name: collection
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollection'
      security: []
  /v0.1/collections/byOwner:
    description: collections_by_owner
    get:
      tags:
      - nft-collection-controller
      description: collections_by_owner
      operationId: searchNftCollectionsByOwner
      parameters:
      - name: owner
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollections'
      security: []
  /v0.1/collections/all:
    description: collections_all
    get:
      tags:
      - nft-collection-controller
      description: collections_all
      operationId: searchNftAllCollections
      parameters:
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NftCollections'
      security: []
  /v0.1/orders:
    description: Create or update an order
    post:
      tags:
      - order-controller
      description: Create or update an order
      operationId: upsertOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForm'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/VALIDATION'
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security: []
  /v0.1/orders/all:
    description: Get all orders
    get:
      tags:
      - order-controller
      description: Get all orders
      operationId: getOrdersAll
      parameters:
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/{hash}:
    description: Get order by hash
    get:
      tags:
      - order-controller
      description: Get order by hash
      operationId: getOrderByHash
      parameters:
      - name: hash
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      security: []
  /v0.1/orders/sell/byMaker:
    description: Get sell order by maker
    get:
      tags:
      - order-controller
      description: Get sell order by maker
      operationId: getSellOrdersByMaker
      parameters:
      - name: maker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/sell/byItem:
    description: Get sell order by item
    get:
      tags:
      - order-controller
      description: Get sell order by item
      operationId: getSellOrderByItem
      parameters:
      - name: contract
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: tokenId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BigInteger'
      - name: maker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/sell/byCollection:
    description: Get sell orders by collection
    get:
      tags:
      - order-controller
      description: Get sell orders by collection
      operationId: getSellOrdersByCollection
      parameters:
      - name: collection
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/sell:
    description: Get sell orders
    get:
      tags:
      - order-controller
      description: Get sell orders
      operationId: getSellOrders
      parameters:
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/bids/byMaker:
    description: Get order bids by maker
    get:
      tags:
      - order-controller
      description: Get order bids by maker
      operationId: getOrderBidsByMaker
      parameters:
      - name: maker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/orders/bids/byItem:
    description: Get order bids by item
    get:
      tags:
      - order-controller
      description: Get order bids by item
      operationId: getOrderBidsByItem
      parameters:
      - name: contract
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: tokenId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BigInteger'
      - name: maker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Address'
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagination'
      security: []
  /v0.1/order/activities/search:
    description: get Order activities with some filter
    post:
      tags:
      - order-activity-controller
      description: get Order activities with some filter
      operationId: getOrderActivities
      parameters:
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          maximum: 9007199254740992
      - name: continuation
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderActivityFilter'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderActivities'
      security: []
  /v0.1/order/signature/validate:
    description: Validate a message
    post:
      tags:
      - order-signature-controller
      description: Validate a message
      operationId: validate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureValidationForm'
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UNEXPECTED_API_ERROR'
                - $ref: '#/components/schemas/INVALID_ARGUMENT'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security: []
components:
  schemas:
    Address:
      type: string
    Asset:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/AssetType'
        value:
          $ref: '#/components/schemas/BigDecimal'
      required:
      - value
      - assetType
      additionalProperties: false
    AssetType:
      oneOf:
      - $ref: '#/components/schemas/XTZAssetType'
      - $ref: '#/components/schemas/FA_1_2AssetType'
      - $ref: '#/components/schemas/FA_2AssetType'
    BigDecimal:
      type: string
    BigInteger:
      type: string
    BlockNumber:
      type: integer
      minimum: 0
      maximum: 9007199254740992
    Burn:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - burn
        owner:
          $ref: '#/components/schemas/Address'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        value:
          $ref: '#/components/schemas/BigInteger'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
      required:
      - blockNumber
      - blockHash
      - transactionHash
      - value
      - tokenId
      - contract
      - owner
      - '@type'
      additionalProperties: false
    Edpk:
      type: string
    Edsig:
      type: string
    FA_1_2AssetType:
      type: object
      properties:
        assetClass:
          type: string
          enum:
          - FA_1_2
        contract:
          $ref: '#/components/schemas/Address'
      required:
      - contract
      - assetClass
      additionalProperties: false
    FA_2AssetType:
      type: object
      properties:
        assetClass:
          type: string
          enum:
          - FA_2
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
      required:
      - tokenId
      - contract
      - assetClass
      additionalProperties: false
    INVALID_ARGUMENT:
      type: object
      properties:
        code:
          type: string
          enum:
          - INVALID_ARGUMENT
        message:
          type: string
      required:
      - message
      - code
      additionalProperties: false
    ItemHistory:
      oneOf:
      - $ref: '#/components/schemas/ItemRoyalty'
      - $ref: '#/components/schemas/ItemTransfer'
    ItemRoyalty:
      type: object
      properties:
        type:
          type: string
          enum:
          - ROYALTY
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
      required:
      - royalties
      - type
      additionalProperties: false
    ItemTransfer:
      type: object
      properties:
        type:
          type: string
          enum:
          - TRANSFER
        owner:
          $ref: '#/components/schemas/Address'
        value:
          $ref: '#/components/schemas/Address'
        from:
          $ref: '#/components/schemas/Address'
      required:
      - from
      - type
      additionalProperties: false
    ItemTransferElt:
      type: object
      properties:
        type:
          type: string
          enum:
          - TRANSFER
        from:
          $ref: '#/components/schemas/Address'
      required:
      - from
      - type
      additionalProperties: false
    Mint:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - mint
        owner:
          $ref: '#/components/schemas/Address'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        value:
          $ref: '#/components/schemas/BigInteger'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
      required:
      - blockNumber
      - blockHash
      - transactionHash
      - value
      - tokenId
      - contract
      - owner
      - '@type'
      additionalProperties: false
    NftActivities:
      type: object
      properties:
        continuation:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/NftActivityType'
      required:
      - items
      additionalProperties: false
    NftActivityElt:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/Address'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        value:
          $ref: '#/components/schemas/BigInteger'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
      required:
      - blockNumber
      - blockHash
      - transactionHash
      - value
      - tokenId
      - contract
      - owner
      additionalProperties: false
    NftActivityFilter:
      oneOf:
      - $ref: '#/components/schemas/NftActivityFilterAll'
      - $ref: '#/components/schemas/NftActivityFilterByUser'
      - $ref: '#/components/schemas/NftActivityFilterByItem'
      - $ref: '#/components/schemas/NftActivityFilterByCollection'
    NftActivityFilterAll:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - all
        types:
          type: array
          items:
            $ref: '#/components/schemas/NftActivityFilterAllType'
      required:
      - types
      - '@type'
      additionalProperties: false
    NftActivityFilterAllType:
      type: string
      enum:
      - TRANSFER
      - MINT
      - BURN
    NftActivityFilterByCollection:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_collection
        types:
          type: array
          items:
            $ref: '#/components/schemas/NftActivityFilterAllType'
        contract:
          $ref: '#/components/schemas/Address'
      required:
      - contract
      - types
      - '@type'
      additionalProperties: false
    NftActivityFilterByItem:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_item
        types:
          type: array
          items:
            $ref: '#/components/schemas/NftActivityFilterAllType'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
      required:
      - tokenId
      - contract
      - types
      - '@type'
      additionalProperties: false
    NftActivityFilterByUser:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_user
        types:
          type: array
          items:
            $ref: '#/components/schemas/NftActivityFilterUserType'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      required:
      - users
      - types
      - '@type'
      additionalProperties: false
    NftActivityFilterUserType:
      type: string
      enum:
      - TRANSFER_FROM
      - TRANSFER_TO
      - MINT
      - BURN
    NftActivityType:
      oneOf:
      - $ref: '#/components/schemas/Mint'
      - $ref: '#/components/schemas/Burn'
      - $ref: '#/components/schemas/Transfer'
    NftCollection:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Address'
        owner:
          $ref: '#/components/schemas/Address'
        type:
          $ref: '#/components/schemas/NftCollectionType'
        name:
          type: string
        symbol:
          type: string
        features:
          type: array
          items:
            $ref: '#/components/schemas/NftCollectionFeature'
        supports_lazy_mint:
          type: boolean
        minters:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      required:
      - supports_lazy_mint
      - features
      - name
      - type
      - id
      additionalProperties: false
    NftCollectionFeature:
      type: string
      enum:
      - APPROVE_FOR_ALL
      - SET_URI_PREFIX
      - BURN
      - MINT_WITH_ADDRESS
      - SECONDARY_SALE_FEES
      - MINT_AND_TRANSFER
    NftCollectionType:
      type: string
      enum:
      - FA_2
    NftCollections:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        continuation:
          type: string
        collections:
          type: array
          items:
            $ref: '#/components/schemas/NftCollection'
      required:
      - collections
      - total
      additionalProperties: false
    NftItem:
      type: object
      properties:
        id:
          type: string
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        supply:
          $ref: '#/components/schemas/BigInteger'
        lazySupply:
          $ref: '#/components/schemas/BigInteger'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        royalties:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        date:
          type: string
          format: date-time
        mintedAt:
          type: string
          format: date-time
        pending:
          type: array
          items:
            $ref: '#/components/schemas/ItemTransferElt'
        deleted:
          type: boolean
        meta:
          $ref: '#/components/schemas/NftItemMeta'
      required:
      - mintedAt
      - date
      - royalties
      - owners
      - lazySupply
      - supply
      - creators
      - tokenId
      - contract
      - id
      additionalProperties: false
    NftItemAttribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
        format:
          type: string
      required:
      - key
      additionalProperties: false
    NftItemMeta:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/NftItemAttribute'
        image:
          type: string
        animation:
          type: string
      required:
      - name
      additionalProperties: false
    NftItems:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        continuation:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/NftItem'
      required:
      - items
      - total
      additionalProperties: false
    NftOwnership:
      type: object
      properties:
        id:
          type: string
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        owner:
          $ref: '#/components/schemas/Address'
        creators:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        value:
          $ref: '#/components/schemas/BigInteger'
        lazyValue:
          $ref: '#/components/schemas/BigInteger'
        date:
          type: string
          format: date-time
        pending:
          type: array
          items:
            $ref: '#/components/schemas/ItemHistory'
      required:
      - pending
      - date
      - lazyValue
      - value
      - creators
      - owner
      - tokenId
      - contract
      - id
      additionalProperties: false
    NftOwnerships:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        continuation:
          type: string
        ownerships:
          type: array
          items:
            $ref: '#/components/schemas/NftOwnership'
      required:
      - ownerships
      - total
      additionalProperties: false
    NftSignature:
      type: object
      properties:
        r:
          type: string
        s:
          $ref: '#/components/schemas/Edsig'
        v:
          $ref: '#/components/schemas/Edsig'
      required:
      - v
      - s
      - r
      additionalProperties: false
    NftTokenId:
      type: object
      properties:
        tokenId:
          $ref: '#/components/schemas/BigInteger'
        signature:
          $ref: '#/components/schemas/NftSignature'
      required:
      - tokenId
      additionalProperties: false
    Order:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderRaribleV2DataV1'
        maker:
          $ref: '#/components/schemas/Address'
        makerEdpk:
          $ref: '#/components/schemas/Edpk'
        taker:
          $ref: '#/components/schemas/Address'
        takerEdpk:
          $ref: '#/components/schemas/Edpk'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        fill:
          $ref: '#/components/schemas/BigInteger'
        start:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        end:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        makeStock:
          $ref: '#/components/schemas/BigInteger'
        cancelled:
          type: boolean
        salt:
          $ref: '#/components/schemas/Word'
        signature:
          $ref: '#/components/schemas/Edsig'
        createdAt:
          type: string
          format: date-time
        lastUpdateAt:
          type: string
          format: date-time
        pending:
          type: array
          items:
            $ref: '#/components/schemas/OrderExchangeHistory'
        hash:
          $ref: '#/components/schemas/Word'
        makeBalance:
          $ref: '#/components/schemas/BigInteger'
        priceHistory:
          type: array
          items:
            $ref: '#/components/schemas/OrderPriceHistoryRecord'
        status:
          $ref: '#/components/schemas/OrderStatus'
        type:
          type: string
          enum:
          - RARIBLE_V2
      required:
      - type
      - hash
      - lastUpdateAt
      - createdAt
      - signature
      - salt
      - cancelled
      - makeStock
      - fill
      - take
      - make
      - makerEdpk
      - maker
      - data
      additionalProperties: false
    OrderActivities:
      type: object
      properties:
        items:
          title: OrderActivitiesItems
          type: array
          items:
            $ref: '#/components/schemas/OrderActivityType'
        continuation:
          type: string
      required:
      - items
      additionalProperties: false
    OrderActivityBid:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - bid
        hash:
          $ref: '#/components/schemas/Word'
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        price:
          $ref: '#/components/schemas/BigDecimal'
      required:
      - price
      - take
      - make
      - maker
      - hash
      - '@type'
      additionalProperties: false
    OrderActivityCancelBid:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - cancel_bid
        hash:
          $ref: '#/components/schemas/Word'
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/AssetType'
        take:
          $ref: '#/components/schemas/AssetType'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
        logIndex:
          type: integer
          minimum: -1073741824
          maximum: 1073741823
      required:
      - logIndex
      - blockNumber
      - blockHash
      - transactionHash
      - take
      - make
      - maker
      - hash
      - '@type'
      additionalProperties: false
    OrderActivityCancelList:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - cancel_list
        hash:
          $ref: '#/components/schemas/Word'
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/AssetType'
        take:
          $ref: '#/components/schemas/AssetType'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
        logIndex:
          type: integer
          minimum: -1073741824
          maximum: 1073741823
      required:
      - logIndex
      - blockNumber
      - blockHash
      - transactionHash
      - take
      - make
      - maker
      - hash
      - '@type'
      additionalProperties: false
    OrderActivityFilter:
      oneOf:
      - $ref: '#/components/schemas/OrderActivityFilterAll'
      - $ref: '#/components/schemas/OrderActivityFilterByUser'
      - $ref: '#/components/schemas/OrderActivityFilterByItem'
      - $ref: '#/components/schemas/OrderActivityFilterByCollection'
    OrderActivityFilterAll:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - all
        types:
          type: array
          items:
            $ref: '#/components/schemas/OrderActivityFilterAllType'
      required:
      - types
      - '@type'
      additionalProperties: false
    OrderActivityFilterAllType:
      type: string
      enum:
      - BID
      - LIST
      - MATCH
    OrderActivityFilterByCollection:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_collection
        types:
          type: array
          items:
            $ref: '#/components/schemas/OrderActivityFilterAllType'
        contract:
          $ref: '#/components/schemas/Address'
      required:
      - contract
      - types
      - '@type'
      additionalProperties: false
    OrderActivityFilterByItem:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_item
        types:
          type: array
          items:
            $ref: '#/components/schemas/OrderActivityFilterAllType'
        contract:
          $ref: '#/components/schemas/Address'
        tokenId:
          $ref: '#/components/schemas/BigInteger'
      required:
      - tokenId
      - contract
      - types
      - '@type'
      additionalProperties: false
    OrderActivityFilterByUser:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - by_user
        types:
          type: array
          items:
            $ref: '#/components/schemas/OrderActivityFilterUserType'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      required:
      - users
      - types
      - '@type'
      additionalProperties: false
    OrderActivityFilterUserType:
      type: string
      enum:
      - MAKE_BID
      - GET_BID
      - LIST
      - BUY
      - SELL
    OrderActivityList:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - list
        hash:
          $ref: '#/components/schemas/Word'
        maker:
          $ref: '#/components/schemas/Address'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        price:
          $ref: '#/components/schemas/BigDecimal'
      required:
      - price
      - take
      - make
      - maker
      - hash
      - '@type'
      additionalProperties: false
    OrderActivityMatch:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - match
        left:
          $ref: '#/components/schemas/OrderActivitySideMatch'
        right:
          $ref: '#/components/schemas/OrderActivitySideMatch'
        price:
          $ref: '#/components/schemas/BigDecimal'
        transactionHash:
          $ref: '#/components/schemas/Word'
        blockHash:
          $ref: '#/components/schemas/Word'
        blockNumber:
          $ref: '#/components/schemas/BlockNumber'
        logIndex:
          type: integer
          minimum: -1073741824
          maximum: 1073741823
      required:
      - logIndex
      - blockNumber
      - blockHash
      - transactionHash
      - price
      - right
      - left
      - '@type'
      additionalProperties: false
    OrderActivitySideMatch:
      type: object
      properties:
        maker:
          $ref: '#/components/schemas/Address'
        hash:
          $ref: '#/components/schemas/Word'
        asset:
          $ref: '#/components/schemas/Asset'
        type:
          $ref: '#/components/schemas/OrderActivitySideType'
      required:
      - type
      - asset
      - hash
      - maker
      additionalProperties: false
    OrderActivitySideType:
      type: string
      enum:
      - SELL
      - BID
    OrderActivityType:
      oneOf:
      - $ref: '#/components/schemas/OrderActivityMatch'
      - $ref: '#/components/schemas/OrderActivityList'
      - $ref: '#/components/schemas/OrderActivityBid'
      - $ref: '#/components/schemas/OrderActivityCancelBid'
      - $ref: '#/components/schemas/OrderActivityCancelList'
    OrderCancel:
      type: object
      properties:
        type:
          type: string
          enum:
          - CANCEL
        hash:
          $ref: '#/components/schemas/Word'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        date:
          type: string
          format: date-time
        maker:
          $ref: '#/components/schemas/Address'
      required:
      - date
      - hash
      - type
      additionalProperties: false
    OrderExchangeHistory:
      oneOf:
      - $ref: '#/components/schemas/OrderCancel'
      - $ref: '#/components/schemas/OrderSideMatch'
    OrderForm:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrderRaribleV2DataV1'
        maker:
          $ref: '#/components/schemas/Address'
        makerEdpk:
          $ref: '#/components/schemas/Edpk'
        taker:
          $ref: '#/components/schemas/Address'
        takerEdpk:
          $ref: '#/components/schemas/Edpk'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        salt:
          $ref: '#/components/schemas/BigInteger'
        start:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        end:
          type: integer
          minimum: 0
          maximum: 9007199254740992
        signature:
          $ref: '#/components/schemas/Edsig'
        type:
          type: string
          enum:
          - RARIBLE_V2
      required:
      - type
      - signature
      - salt
      - take
      - make
      - makerEdpk
      - maker
      - data
      additionalProperties: false
    OrderPagination:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        continuation:
          type: string
      required:
      - orders
      additionalProperties: false
    OrderPriceHistoryRecord:
      type: object
      properties:
        date:
          type: string
          format: date-time
        makeValue:
          $ref: '#/components/schemas/BigDecimal'
        takeValue:
          $ref: '#/components/schemas/BigDecimal'
      required:
      - takeValue
      - makeValue
      - date
      additionalProperties: false
    OrderRaribleV2DataV1:
      type: object
      properties:
        dataType:
          type: string
        payouts:
          type: array
          items:
            $ref: '#/components/schemas/Part'
        originFees:
          type: array
          items:
            $ref: '#/components/schemas/Part'
      required:
      - originFees
      - payouts
      - dataType
      additionalProperties: false
    OrderSide:
      type: string
      enum:
      - LEFT
      - RIGHT
    OrderSideMatch:
      type: object
      properties:
        type:
          type: string
          enum:
          - ORDER_SIDE_MATCH
        hash:
          $ref: '#/components/schemas/Word'
        make:
          $ref: '#/components/schemas/Asset'
        take:
          $ref: '#/components/schemas/Asset'
        date:
          type: string
          format: date-time
        maker:
          $ref: '#/components/schemas/Address'
        side:
          $ref: '#/components/schemas/OrderSide'
        fill:
          $ref: '#/components/schemas/BigInteger'
        taker:
          $ref: '#/components/schemas/Address'
        counterHash:
          $ref: '#/components/schemas/Word'
      required:
      - fill
      - date
      - hash
      - type
      additionalProperties: false
    OrderStatus:
      type: string
      enum:
      - OACTIVE
      - OFILLED
      - OHISTORICAL
      - INACTIVE
      - CANCELLED
    Part:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Address'
        value:
          type: integer
          minimum: 0
          maximum: 2147483647
      required:
      - value
      - account
      additionalProperties: false
    SignatureValidationForm:
      type: object
      properties:
        signer:
          $ref: '#/components/schemas/Edpk'
        message:
          type: string
        signature:
          $ref: '#/components/schemas/Edsig'
      required:
      - signature
      - message
      - signer
      additionalProperties: false
    Transfer:
      type: object
      properties:
        '@type':
          type: string
          enum:
          - transfer
        elt:
          $ref: '#/components/schemas/NftActivityElt'
        from:
          $ref: '#/components/schemas/Address'
      required:
      - from
      - elt
      - '@type'
      additionalProperties: false
    UNEXPECTED_API_ERROR:
      type: object
      properties:
        code:
          type: string
          enum:
          - UNEXPECTED_API_ERROR
        message:
          type: string
      required:
      - message
      - code
      additionalProperties: false
    VALIDATION:
      type: object
      properties:
        code:
          type: string
          enum:
          - VALIDATION
        message:
          type: string
      required:
      - message
      - code
      additionalProperties: false
    Word:
      type: string
    XTZAssetType:
      type: object
      properties:
        assetClass:
          type: string
          enum:
          - XTZ
      required:
      - assetClass
      additionalProperties: false
  securitySchemes: {}
